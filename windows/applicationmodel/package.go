// Code generated by winrt-go-gen. DO NOT EDIT.

//go:build windows

//nolint:all
package applicationmodel

import (
	"syscall"
	"unsafe"

	"github.com/go-ole/go-ole"
	"github.com/martytsaitw/winrt-go/windows/foundation"
	"github.com/martytsaitw/winrt-go/windows/foundation/collections"
	"github.com/martytsaitw/winrt-go/windows/storage"
	"github.com/martytsaitw/winrt-go/windows/storage/streams"
)

const SignaturePackage string = "rc(Windows.ApplicationModel.Package;{163c792f-bd75-413c-bf23-b1fe7b95d825})"

type Package struct {
	ole.IUnknown
}

func (impl *Package) GetId() (*PackageId, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackage))
	defer itf.Release()
	v := (*iPackage)(unsafe.Pointer(itf))
	return v.GetId()
}

func (impl *Package) GetInstalledLocation() (*storage.StorageFolder, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackage))
	defer itf.Release()
	v := (*iPackage)(unsafe.Pointer(itf))
	return v.GetInstalledLocation()
}

func (impl *Package) GetIsFramework() (bool, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackage))
	defer itf.Release()
	v := (*iPackage)(unsafe.Pointer(itf))
	return v.GetIsFramework()
}

func (impl *Package) GetDependencies() (*collections.IVectorView, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackage))
	defer itf.Release()
	v := (*iPackage)(unsafe.Pointer(itf))
	return v.GetDependencies()
}

func (impl *Package) GetDisplayName() (string, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackage2))
	defer itf.Release()
	v := (*iPackage2)(unsafe.Pointer(itf))
	return v.GetDisplayName()
}

func (impl *Package) GetPublisherDisplayName() (string, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackage2))
	defer itf.Release()
	v := (*iPackage2)(unsafe.Pointer(itf))
	return v.GetPublisherDisplayName()
}

func (impl *Package) GetDescription() (string, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackage2))
	defer itf.Release()
	v := (*iPackage2)(unsafe.Pointer(itf))
	return v.GetDescription()
}

func (impl *Package) GetLogo() (*foundation.Uri, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackage2))
	defer itf.Release()
	v := (*iPackage2)(unsafe.Pointer(itf))
	return v.GetLogo()
}

func (impl *Package) GetIsResourcePackage() (bool, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackage2))
	defer itf.Release()
	v := (*iPackage2)(unsafe.Pointer(itf))
	return v.GetIsResourcePackage()
}

func (impl *Package) GetIsBundle() (bool, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackage2))
	defer itf.Release()
	v := (*iPackage2)(unsafe.Pointer(itf))
	return v.GetIsBundle()
}

func (impl *Package) GetIsDevelopmentMode() (bool, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackage2))
	defer itf.Release()
	v := (*iPackage2)(unsafe.Pointer(itf))
	return v.GetIsDevelopmentMode()
}

func (impl *Package) GetStatus() (*PackageStatus, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackage3))
	defer itf.Release()
	v := (*iPackage3)(unsafe.Pointer(itf))
	return v.GetStatus()
}

func (impl *Package) GetInstalledDate() (foundation.DateTime, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackage3))
	defer itf.Release()
	v := (*iPackage3)(unsafe.Pointer(itf))
	return v.GetInstalledDate()
}

func (impl *Package) GetAppListEntriesAsync() (*foundation.IAsyncOperation, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackage3))
	defer itf.Release()
	v := (*iPackage3)(unsafe.Pointer(itf))
	return v.GetAppListEntriesAsync()
}

func (impl *Package) GetInstallDate() (foundation.DateTime, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackageWithMetadata))
	defer itf.Release()
	v := (*iPackageWithMetadata)(unsafe.Pointer(itf))
	return v.GetInstallDate()
}

func (impl *Package) GetThumbnailToken() (string, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackageWithMetadata))
	defer itf.Release()
	v := (*iPackageWithMetadata)(unsafe.Pointer(itf))
	return v.GetThumbnailToken()
}

func (impl *Package) Launch(parameters string) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackageWithMetadata))
	defer itf.Release()
	v := (*iPackageWithMetadata)(unsafe.Pointer(itf))
	return v.Launch(parameters)
}

func (impl *Package) GetSignatureKind() (PackageSignatureKind, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackage4))
	defer itf.Release()
	v := (*iPackage4)(unsafe.Pointer(itf))
	return v.GetSignatureKind()
}

func (impl *Package) GetIsOptional() (bool, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackage4))
	defer itf.Release()
	v := (*iPackage4)(unsafe.Pointer(itf))
	return v.GetIsOptional()
}

func (impl *Package) VerifyContentIntegrityAsync() (*foundation.IAsyncOperation, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackage4))
	defer itf.Release()
	v := (*iPackage4)(unsafe.Pointer(itf))
	return v.VerifyContentIntegrityAsync()
}

func (impl *Package) GetContentGroupsAsync() (*foundation.IAsyncOperation, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackage5))
	defer itf.Release()
	v := (*iPackage5)(unsafe.Pointer(itf))
	return v.GetContentGroupsAsync()
}

func (impl *Package) GetContentGroupAsync(name string) (*foundation.IAsyncOperation, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackage5))
	defer itf.Release()
	v := (*iPackage5)(unsafe.Pointer(itf))
	return v.GetContentGroupAsync(name)
}

func (impl *Package) StageContentGroupsAsync(names *collections.IIterable) (*foundation.IAsyncOperation, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackage5))
	defer itf.Release()
	v := (*iPackage5)(unsafe.Pointer(itf))
	return v.StageContentGroupsAsync(names)
}

func (impl *Package) StageContentGroupsWithPriorityAsync(names *collections.IIterable, moveToHeadOfQueue bool) (*foundation.IAsyncOperation, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackage5))
	defer itf.Release()
	v := (*iPackage5)(unsafe.Pointer(itf))
	return v.StageContentGroupsWithPriorityAsync(names, moveToHeadOfQueue)
}

func (impl *Package) SetInUseAsync(inUse bool) (*foundation.IAsyncOperation, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackage5))
	defer itf.Release()
	v := (*iPackage5)(unsafe.Pointer(itf))
	return v.SetInUseAsync(inUse)
}

func (impl *Package) GetAppInstallerInfo() (*AppInstallerInfo, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackage6))
	defer itf.Release()
	v := (*iPackage6)(unsafe.Pointer(itf))
	return v.GetAppInstallerInfo()
}

func (impl *Package) CheckUpdateAvailabilityAsync() (*foundation.IAsyncOperation, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackage6))
	defer itf.Release()
	v := (*iPackage6)(unsafe.Pointer(itf))
	return v.CheckUpdateAvailabilityAsync()
}

func (impl *Package) GetMutableLocation() (*storage.StorageFolder, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackage7))
	defer itf.Release()
	v := (*iPackage7)(unsafe.Pointer(itf))
	return v.GetMutableLocation()
}

func (impl *Package) GetEffectiveLocation() (*storage.StorageFolder, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackage7))
	defer itf.Release()
	v := (*iPackage7)(unsafe.Pointer(itf))
	return v.GetEffectiveLocation()
}

func (impl *Package) GetEffectiveExternalLocation() (*storage.StorageFolder, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackage8))
	defer itf.Release()
	v := (*iPackage8)(unsafe.Pointer(itf))
	return v.GetEffectiveExternalLocation()
}

func (impl *Package) GetMachineExternalLocation() (*storage.StorageFolder, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackage8))
	defer itf.Release()
	v := (*iPackage8)(unsafe.Pointer(itf))
	return v.GetMachineExternalLocation()
}

func (impl *Package) GetUserExternalLocation() (*storage.StorageFolder, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackage8))
	defer itf.Release()
	v := (*iPackage8)(unsafe.Pointer(itf))
	return v.GetUserExternalLocation()
}

func (impl *Package) GetInstalledPath() (string, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackage8))
	defer itf.Release()
	v := (*iPackage8)(unsafe.Pointer(itf))
	return v.GetInstalledPath()
}

func (impl *Package) GetMutablePath() (string, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackage8))
	defer itf.Release()
	v := (*iPackage8)(unsafe.Pointer(itf))
	return v.GetMutablePath()
}

func (impl *Package) GetEffectivePath() (string, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackage8))
	defer itf.Release()
	v := (*iPackage8)(unsafe.Pointer(itf))
	return v.GetEffectivePath()
}

func (impl *Package) GetEffectiveExternalPath() (string, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackage8))
	defer itf.Release()
	v := (*iPackage8)(unsafe.Pointer(itf))
	return v.GetEffectiveExternalPath()
}

func (impl *Package) GetMachineExternalPath() (string, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackage8))
	defer itf.Release()
	v := (*iPackage8)(unsafe.Pointer(itf))
	return v.GetMachineExternalPath()
}

func (impl *Package) GetUserExternalPath() (string, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackage8))
	defer itf.Release()
	v := (*iPackage8)(unsafe.Pointer(itf))
	return v.GetUserExternalPath()
}

func (impl *Package) GetLogoAsRandomAccessStreamReference(size foundation.Size) (*streams.RandomAccessStreamReference, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackage8))
	defer itf.Release()
	v := (*iPackage8)(unsafe.Pointer(itf))
	return v.GetLogoAsRandomAccessStreamReference(size)
}

func (impl *Package) GetAppListEntries() (*collections.IVectorView, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackage8))
	defer itf.Release()
	v := (*iPackage8)(unsafe.Pointer(itf))
	return v.GetAppListEntries()
}

func (impl *Package) GetIsStub() (bool, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiPackage8))
	defer itf.Release()
	v := (*iPackage8)(unsafe.Pointer(itf))
	return v.GetIsStub()
}

const GUIDiPackage string = "163c792f-bd75-413c-bf23-b1fe7b95d825"
const SignatureiPackage string = "{163c792f-bd75-413c-bf23-b1fe7b95d825}"

type iPackage struct {
	ole.IInspectable
}

type iPackageVtbl struct {
	ole.IInspectableVtbl

	GetId                uintptr
	GetInstalledLocation uintptr
	GetIsFramework       uintptr
	GetDependencies      uintptr
}

func (v *iPackage) VTable() *iPackageVtbl {
	return (*iPackageVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iPackage) GetId() (*PackageId, error) {
	var out *PackageId
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetId,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out PackageId
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iPackage) GetInstalledLocation() (*storage.StorageFolder, error) {
	var out *storage.StorageFolder
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetInstalledLocation,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out storage.StorageFolder
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iPackage) GetIsFramework() (bool, error) {
	var out bool
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetIsFramework,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out bool
	)

	if hr != 0 {
		return false, ole.NewError(hr)
	}

	return out, nil
}

func (v *iPackage) GetDependencies() (*collections.IVectorView, error) {
	var out *collections.IVectorView
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetDependencies,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out collections.IVectorView
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

const GUIDiPackage2 string = "a6612fb6-7688-4ace-95fb-359538e7aa01"
const SignatureiPackage2 string = "{a6612fb6-7688-4ace-95fb-359538e7aa01}"

type iPackage2 struct {
	ole.IInspectable
}

type iPackage2Vtbl struct {
	ole.IInspectableVtbl

	GetDisplayName          uintptr
	GetPublisherDisplayName uintptr
	GetDescription          uintptr
	GetLogo                 uintptr
	GetIsResourcePackage    uintptr
	GetIsBundle             uintptr
	GetIsDevelopmentMode    uintptr
}

func (v *iPackage2) VTable() *iPackage2Vtbl {
	return (*iPackage2Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iPackage2) GetDisplayName() (string, error) {
	var outHStr ole.HString
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetDisplayName,
		uintptr(unsafe.Pointer(v)),        // this
		uintptr(unsafe.Pointer(&outHStr)), // out string
	)

	if hr != 0 {
		return "", ole.NewError(hr)
	}

	out := outHStr.String()
	ole.DeleteHString(outHStr)
	return out, nil
}

func (v *iPackage2) GetPublisherDisplayName() (string, error) {
	var outHStr ole.HString
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetPublisherDisplayName,
		uintptr(unsafe.Pointer(v)),        // this
		uintptr(unsafe.Pointer(&outHStr)), // out string
	)

	if hr != 0 {
		return "", ole.NewError(hr)
	}

	out := outHStr.String()
	ole.DeleteHString(outHStr)
	return out, nil
}

func (v *iPackage2) GetDescription() (string, error) {
	var outHStr ole.HString
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetDescription,
		uintptr(unsafe.Pointer(v)),        // this
		uintptr(unsafe.Pointer(&outHStr)), // out string
	)

	if hr != 0 {
		return "", ole.NewError(hr)
	}

	out := outHStr.String()
	ole.DeleteHString(outHStr)
	return out, nil
}

func (v *iPackage2) GetLogo() (*foundation.Uri, error) {
	var out *foundation.Uri
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetLogo,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out foundation.Uri
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iPackage2) GetIsResourcePackage() (bool, error) {
	var out bool
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetIsResourcePackage,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out bool
	)

	if hr != 0 {
		return false, ole.NewError(hr)
	}

	return out, nil
}

func (v *iPackage2) GetIsBundle() (bool, error) {
	var out bool
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetIsBundle,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out bool
	)

	if hr != 0 {
		return false, ole.NewError(hr)
	}

	return out, nil
}

func (v *iPackage2) GetIsDevelopmentMode() (bool, error) {
	var out bool
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetIsDevelopmentMode,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out bool
	)

	if hr != 0 {
		return false, ole.NewError(hr)
	}

	return out, nil
}

const GUIDiPackage3 string = "5f738b61-f86a-4917-93d1-f1ee9d3b35d9"
const SignatureiPackage3 string = "{5f738b61-f86a-4917-93d1-f1ee9d3b35d9}"

type iPackage3 struct {
	ole.IInspectable
}

type iPackage3Vtbl struct {
	ole.IInspectableVtbl

	GetStatus              uintptr
	GetInstalledDate       uintptr
	GetAppListEntriesAsync uintptr
}

func (v *iPackage3) VTable() *iPackage3Vtbl {
	return (*iPackage3Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iPackage3) GetStatus() (*PackageStatus, error) {
	var out *PackageStatus
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetStatus,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out PackageStatus
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iPackage3) GetInstalledDate() (foundation.DateTime, error) {
	var out foundation.DateTime
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetInstalledDate,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out foundation.DateTime
	)

	if hr != 0 {
		return foundation.DateTime{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iPackage3) GetAppListEntriesAsync() (*foundation.IAsyncOperation, error) {
	var out *foundation.IAsyncOperation
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetAppListEntriesAsync,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out foundation.IAsyncOperation
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

const GUIDiPackageWithMetadata string = "95949780-1de9-40f2-b452-0de9f1910012"
const SignatureiPackageWithMetadata string = "{95949780-1de9-40f2-b452-0de9f1910012}"

type iPackageWithMetadata struct {
	ole.IInspectable
}

type iPackageWithMetadataVtbl struct {
	ole.IInspectableVtbl

	GetInstallDate    uintptr
	GetThumbnailToken uintptr
	Launch            uintptr
}

func (v *iPackageWithMetadata) VTable() *iPackageWithMetadataVtbl {
	return (*iPackageWithMetadataVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iPackageWithMetadata) GetInstallDate() (foundation.DateTime, error) {
	var out foundation.DateTime
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetInstallDate,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out foundation.DateTime
	)

	if hr != 0 {
		return foundation.DateTime{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iPackageWithMetadata) GetThumbnailToken() (string, error) {
	var outHStr ole.HString
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetThumbnailToken,
		uintptr(unsafe.Pointer(v)),        // this
		uintptr(unsafe.Pointer(&outHStr)), // out string
	)

	if hr != 0 {
		return "", ole.NewError(hr)
	}

	out := outHStr.String()
	ole.DeleteHString(outHStr)
	return out, nil
}

func (v *iPackageWithMetadata) Launch(parameters string) error {
	parametersHStr, err := ole.NewHString(parameters)
	if err != nil {
		return err
	}
	hr, _, _ := syscall.SyscallN(
		v.VTable().Launch,
		uintptr(unsafe.Pointer(v)), // this
		uintptr(parametersHStr),    // in string
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

const GUIDiPackage4 string = "65aed1ae-b95b-450c-882b-6255187f397e"
const SignatureiPackage4 string = "{65aed1ae-b95b-450c-882b-6255187f397e}"

type iPackage4 struct {
	ole.IInspectable
}

type iPackage4Vtbl struct {
	ole.IInspectableVtbl

	GetSignatureKind            uintptr
	GetIsOptional               uintptr
	VerifyContentIntegrityAsync uintptr
}

func (v *iPackage4) VTable() *iPackage4Vtbl {
	return (*iPackage4Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iPackage4) GetSignatureKind() (PackageSignatureKind, error) {
	var out PackageSignatureKind
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetSignatureKind,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out PackageSignatureKind
	)

	if hr != 0 {
		return PackageSignatureKindNone, ole.NewError(hr)
	}

	return out, nil
}

func (v *iPackage4) GetIsOptional() (bool, error) {
	var out bool
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetIsOptional,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out bool
	)

	if hr != 0 {
		return false, ole.NewError(hr)
	}

	return out, nil
}

func (v *iPackage4) VerifyContentIntegrityAsync() (*foundation.IAsyncOperation, error) {
	var out *foundation.IAsyncOperation
	hr, _, _ := syscall.SyscallN(
		v.VTable().VerifyContentIntegrityAsync,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out foundation.IAsyncOperation
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

const GUIDiPackage5 string = "0e842dd4-d9ac-45ed-9a1e-74ce056b2635"
const SignatureiPackage5 string = "{0e842dd4-d9ac-45ed-9a1e-74ce056b2635}"

type iPackage5 struct {
	ole.IInspectable
}

type iPackage5Vtbl struct {
	ole.IInspectableVtbl

	GetContentGroupsAsync               uintptr
	GetContentGroupAsync                uintptr
	StageContentGroupsAsync             uintptr
	StageContentGroupsWithPriorityAsync uintptr
	SetInUseAsync                       uintptr
}

func (v *iPackage5) VTable() *iPackage5Vtbl {
	return (*iPackage5Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iPackage5) GetContentGroupsAsync() (*foundation.IAsyncOperation, error) {
	var out *foundation.IAsyncOperation
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetContentGroupsAsync,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out foundation.IAsyncOperation
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iPackage5) GetContentGroupAsync(name string) (*foundation.IAsyncOperation, error) {
	var out *foundation.IAsyncOperation
	nameHStr, err := ole.NewHString(name)
	if err != nil {
		return nil, err
	}
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetContentGroupAsync,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(nameHStr),             // in string
		uintptr(unsafe.Pointer(&out)), // out foundation.IAsyncOperation
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iPackage5) StageContentGroupsAsync(names *collections.IIterable) (*foundation.IAsyncOperation, error) {
	var out *foundation.IAsyncOperation
	hr, _, _ := syscall.SyscallN(
		v.VTable().StageContentGroupsAsync,
		uintptr(unsafe.Pointer(v)),     // this
		uintptr(unsafe.Pointer(names)), // in collections.IIterable
		uintptr(unsafe.Pointer(&out)),  // out foundation.IAsyncOperation
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iPackage5) StageContentGroupsWithPriorityAsync(names *collections.IIterable, moveToHeadOfQueue bool) (*foundation.IAsyncOperation, error) {
	var out *foundation.IAsyncOperation
	hr, _, _ := syscall.SyscallN(
		v.VTable().StageContentGroupsWithPriorityAsync,
		uintptr(unsafe.Pointer(v)),                            // this
		uintptr(unsafe.Pointer(names)),                        // in collections.IIterable
		uintptr(*(*byte)(unsafe.Pointer(&moveToHeadOfQueue))), // in bool
		uintptr(unsafe.Pointer(&out)),                         // out foundation.IAsyncOperation
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iPackage5) SetInUseAsync(inUse bool) (*foundation.IAsyncOperation, error) {
	var out *foundation.IAsyncOperation
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetInUseAsync,
		uintptr(unsafe.Pointer(v)),                // this
		uintptr(*(*byte)(unsafe.Pointer(&inUse))), // in bool
		uintptr(unsafe.Pointer(&out)),             // out foundation.IAsyncOperation
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

const GUIDiPackage6 string = "8b1ad942-12d7-4754-ae4e-638cbc0e3a2e"
const SignatureiPackage6 string = "{8b1ad942-12d7-4754-ae4e-638cbc0e3a2e}"

type iPackage6 struct {
	ole.IInspectable
}

type iPackage6Vtbl struct {
	ole.IInspectableVtbl

	GetAppInstallerInfo          uintptr
	CheckUpdateAvailabilityAsync uintptr
}

func (v *iPackage6) VTable() *iPackage6Vtbl {
	return (*iPackage6Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iPackage6) GetAppInstallerInfo() (*AppInstallerInfo, error) {
	var out *AppInstallerInfo
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetAppInstallerInfo,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out AppInstallerInfo
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iPackage6) CheckUpdateAvailabilityAsync() (*foundation.IAsyncOperation, error) {
	var out *foundation.IAsyncOperation
	hr, _, _ := syscall.SyscallN(
		v.VTable().CheckUpdateAvailabilityAsync,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out foundation.IAsyncOperation
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

const GUIDiPackage7 string = "86ff8d31-a2e4-45e0-9732-283a6d88fde1"
const SignatureiPackage7 string = "{86ff8d31-a2e4-45e0-9732-283a6d88fde1}"

type iPackage7 struct {
	ole.IInspectable
}

type iPackage7Vtbl struct {
	ole.IInspectableVtbl

	GetMutableLocation   uintptr
	GetEffectiveLocation uintptr
}

func (v *iPackage7) VTable() *iPackage7Vtbl {
	return (*iPackage7Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iPackage7) GetMutableLocation() (*storage.StorageFolder, error) {
	var out *storage.StorageFolder
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetMutableLocation,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out storage.StorageFolder
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iPackage7) GetEffectiveLocation() (*storage.StorageFolder, error) {
	var out *storage.StorageFolder
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetEffectiveLocation,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out storage.StorageFolder
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

const GUIDiPackage8 string = "2c584f7b-ce2a-4be6-a093-77cfbb2a7ea1"
const SignatureiPackage8 string = "{2c584f7b-ce2a-4be6-a093-77cfbb2a7ea1}"

type iPackage8 struct {
	ole.IInspectable
}

type iPackage8Vtbl struct {
	ole.IInspectableVtbl

	GetEffectiveExternalLocation         uintptr
	GetMachineExternalLocation           uintptr
	GetUserExternalLocation              uintptr
	GetInstalledPath                     uintptr
	GetMutablePath                       uintptr
	GetEffectivePath                     uintptr
	GetEffectiveExternalPath             uintptr
	GetMachineExternalPath               uintptr
	GetUserExternalPath                  uintptr
	GetLogoAsRandomAccessStreamReference uintptr
	GetAppListEntries                    uintptr
	GetIsStub                            uintptr
}

func (v *iPackage8) VTable() *iPackage8Vtbl {
	return (*iPackage8Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iPackage8) GetEffectiveExternalLocation() (*storage.StorageFolder, error) {
	var out *storage.StorageFolder
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetEffectiveExternalLocation,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out storage.StorageFolder
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iPackage8) GetMachineExternalLocation() (*storage.StorageFolder, error) {
	var out *storage.StorageFolder
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetMachineExternalLocation,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out storage.StorageFolder
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iPackage8) GetUserExternalLocation() (*storage.StorageFolder, error) {
	var out *storage.StorageFolder
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetUserExternalLocation,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out storage.StorageFolder
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iPackage8) GetInstalledPath() (string, error) {
	var outHStr ole.HString
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetInstalledPath,
		uintptr(unsafe.Pointer(v)),        // this
		uintptr(unsafe.Pointer(&outHStr)), // out string
	)

	if hr != 0 {
		return "", ole.NewError(hr)
	}

	out := outHStr.String()
	ole.DeleteHString(outHStr)
	return out, nil
}

func (v *iPackage8) GetMutablePath() (string, error) {
	var outHStr ole.HString
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetMutablePath,
		uintptr(unsafe.Pointer(v)),        // this
		uintptr(unsafe.Pointer(&outHStr)), // out string
	)

	if hr != 0 {
		return "", ole.NewError(hr)
	}

	out := outHStr.String()
	ole.DeleteHString(outHStr)
	return out, nil
}

func (v *iPackage8) GetEffectivePath() (string, error) {
	var outHStr ole.HString
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetEffectivePath,
		uintptr(unsafe.Pointer(v)),        // this
		uintptr(unsafe.Pointer(&outHStr)), // out string
	)

	if hr != 0 {
		return "", ole.NewError(hr)
	}

	out := outHStr.String()
	ole.DeleteHString(outHStr)
	return out, nil
}

func (v *iPackage8) GetEffectiveExternalPath() (string, error) {
	var outHStr ole.HString
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetEffectiveExternalPath,
		uintptr(unsafe.Pointer(v)),        // this
		uintptr(unsafe.Pointer(&outHStr)), // out string
	)

	if hr != 0 {
		return "", ole.NewError(hr)
	}

	out := outHStr.String()
	ole.DeleteHString(outHStr)
	return out, nil
}

func (v *iPackage8) GetMachineExternalPath() (string, error) {
	var outHStr ole.HString
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetMachineExternalPath,
		uintptr(unsafe.Pointer(v)),        // this
		uintptr(unsafe.Pointer(&outHStr)), // out string
	)

	if hr != 0 {
		return "", ole.NewError(hr)
	}

	out := outHStr.String()
	ole.DeleteHString(outHStr)
	return out, nil
}

func (v *iPackage8) GetUserExternalPath() (string, error) {
	var outHStr ole.HString
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetUserExternalPath,
		uintptr(unsafe.Pointer(v)),        // this
		uintptr(unsafe.Pointer(&outHStr)), // out string
	)

	if hr != 0 {
		return "", ole.NewError(hr)
	}

	out := outHStr.String()
	ole.DeleteHString(outHStr)
	return out, nil
}

func (v *iPackage8) GetLogoAsRandomAccessStreamReference(size foundation.Size) (*streams.RandomAccessStreamReference, error) {
	var out *streams.RandomAccessStreamReference
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetLogoAsRandomAccessStreamReference,
		uintptr(unsafe.Pointer(v)),     // this
		uintptr(unsafe.Pointer(&size)), // in foundation.Size
		uintptr(unsafe.Pointer(&out)),  // out streams.RandomAccessStreamReference
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iPackage8) GetAppListEntries() (*collections.IVectorView, error) {
	var out *collections.IVectorView
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetAppListEntries,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out collections.IVectorView
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iPackage8) GetIsStub() (bool, error) {
	var out bool
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetIsStub,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out bool
	)

	if hr != 0 {
		return false, ole.NewError(hr)
	}

	return out, nil
}

const GUIDiPackageStatics string = "4e534bdf-2960-4878-97a4-9624deb72f2d"
const SignatureiPackageStatics string = "{4e534bdf-2960-4878-97a4-9624deb72f2d}"

type iPackageStatics struct {
	ole.IInspectable
}

type iPackageStaticsVtbl struct {
	ole.IInspectableVtbl

	PackageGetCurrent uintptr
}

func (v *iPackageStatics) VTable() *iPackageStaticsVtbl {
	return (*iPackageStaticsVtbl)(unsafe.Pointer(v.RawVTable))
}

func PackageGetCurrent() (*Package, error) {
	inspectable, err := ole.RoGetActivationFactory("Windows.ApplicationModel.Package", ole.NewGUID(GUIDiPackageStatics))
	if err != nil {
		return nil, err
	}
	v := (*iPackageStatics)(unsafe.Pointer(inspectable))

	var out *Package
	hr, _, _ := syscall.SyscallN(
		v.VTable().PackageGetCurrent,
		0,                             // this is a static func, so there's no this
		uintptr(unsafe.Pointer(&out)), // out Package
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}
